#!/bin/bash

BINARY="eclipse-jee-neon-R-linux-gtk-x86_64.tar.gz"
APP="Eclipse.app"

read -p "SwingJS uses program unzip to unzip programs. Install Unzip now? [Y/N]" -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    sudo apt-get install unzip 
    if [ $1 == "no-swingjs" ]
    then
        wget https://raw.githubusercontent.com/SwingJS/SwingJSUtils/master/latestj2s
        NEWESTJ2S=`cat latestj2s`
        rm latestj2s
    elif [ $1 == "swingjs" ]
    then
        wget "https://sourceforge.net/p/swingjs/code/HEAD/tree/trunk/src/SwingJS.properties?format=raw"
        NEWESTJ2S=`grep "J2Score_Version" SwingJS.properties\?format=raw | grep -o '".*"' | sed 's/"//g'`
        rm SwingJS.properties\?format=raw
    else
        echo "****************************************
    First argument must be either swingjs or no-swingjs.
    ****************************************"
    fi

    if [ $2 == "latest" ]
    then
        if [ ! -z "$3" ]
        then
            cd $3
        fi

        if [ -d "Eclipse.app" ]
        then
            echo "****************************************
            Eclipse is already installed. Checking to see if the your J2S plugins need to be updated to the most recent version.
            ****************************************"
            cd eclipse/dropins
            CURRENTJ2S=$(ls *.zip)
            CURRENTJ2S=${CURRENTJ2S::-4}
            CURRENTJ2S=${CURRENTJ2S:11}
            cd ../../../../
            if [ $CURRENTJ2S != $2 ]
            then
                rm -rf eclipse/dropins/net.sf.j2s*
                wget https://github.com/BobHanson/java2script/raw/swingjs/releases/$2/net.sf.j2s_$2.zip
                mv net.sf.j2s_$2.zip net.sf.j2s_$NEWESTJ2S.zip
                cp net.sf.j2s_$NEWESTJ2S.zip eclipse/dropins/net.sf.j2s_$NEWESTJ2S.zip
                unzip net.sf.j2s_$NEWESTJ2S.zip -d eclipse/dropins/
                rm net.sf.j2s_$NEWESTJ2S.zip
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            else
                echo "****************************************
                Latest J2S plugins version $CURRENTJ2S already installed, exiting
                ****************************************"
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            fi
        fi

        echo $BINARY
        echo $APP
        if [ -d "$APP" ]; then
            rm -rf $APP
        fi

        if [ ! -f "$BINARY" ]; then
            wget http://mirror.csclub.uwaterloo.ca/eclipse/technology/epp/downloads/release/neon/R/eclipse-jee-neon-R-linux-gtk-x86_64.tar.gz
        fi
        wget https://github.com/BobHanson/java2script/raw/swingjs/releases/latest/net.sf.j2s_latest.zip
        tar xvf $BINARY
        rm $BINARY
        mv net.sf.j2s_latest.zip net.sf.j2s_$NEWESTJ2S.zip
        cp net.sf.j2s_$NEWESTJ2S.zip eclipse/dropins/net.sf.j2s_$NEWESTJ2S.zip
        unzip net.sf.j2s_$NEWESTJ2S.zip -d eclipse/dropins/
        rm net.sf.j2s_$NEWESTJ2S.zip
    else #specify a version of the plugins [in argv, this will be argument #2, and can be invoked via $2]
        if [ ! -z "$3" ]
        then
            cd $3
        fi

        if [ -d "Eclipse.app" ]
        then
            echo "****************************************
            Eclipse is already installed. Checking if J2S plugins need to be changed
            ****************************************"
            cd eclipse/dropins
            CURRENTJ2S=$(ls *.zip)
            CURRENTJ2S=${CURRENTJ2S::-4}
            CURRENTJ2S=${CURRENTJ2S:11}
            cd ../../../../
            if [ $CURRENTJ2S != $2 ]
            then
                rm -rf eclipse/dropins/net.sf.j2s*
                wget https://github.com/BobHanson/java2script/raw/swingjs/releases/$2/net.sf.j2s_$2.zip
                cp net.sf.j2s_$2.zip eclipse/dropins/net.sf.j2s_$2.zip
                unzip net.sf.j2s_$2.zip -d eclipse/dropins/
                rm net.sf.j2s_$2.zip
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            else
                echo "****************************************
                Specified J2S plugins version $2 already installed, exiting
                ****************************************"
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            fi
        fi

        echo $BINARY
        echo $APP
        if [ -d "$APP" ]; then
            rm -rf $APP
        fi

        if [ ! -f "$BINARY" ]; then
            wget http://mirror.csclub.uwaterloo.ca/eclipse/technology/epp/downloads/release/neon/R/eclipse-jee-neon-R-linux-gtk-x86_64.tar.gz

        fi
        wget https://github.com/BobHanson/java2script/raw/swingjs/releases/$2/net.sf.j2s_$2.zip
        tar xvf $BINARY
        rm $BINARY
        cp net.sf.j2s_$2.zip eclipse/dropins/net.sf.j2s_$2.zip
        unzip net.sf.j2s_$2.zip -d eclipse/dropins/
        rm net.sf.j2s_$2.zip
    fi
fi
