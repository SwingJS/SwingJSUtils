#!/bin/bash

curl -O https://raw.githubusercontent.com/SwingJS/SwingJSUtils/master/latestj2s
NEWESTJ2S=`cat latestj2s`
rm latestj2s

if [ $1 == "no-swingjs"]
then
    if [ $2 == "latest" ]
    then
        if [ ! -z "$3" ]
        then
            cd $3
        fi

        if [ -d "Eclipse.app" ]
        then
            echo "****************************************
            Eclipse is already installed. Checking to see if the your J2S plugins need to be updated to the most recent version.
            ****************************************"
            cd Eclipse.app/Contents/Eclipse/dropins
            CURRENTJ2S=$(ls *.zip)
            CURRENTJ2S=${CURRENTJ2S::-4}
            CURRENTJ2S=${CURRENTJ2S:11}
            cd ../../../../
            if [ $CURRENTJ2S != $2 ]
            then
                rm -rf Eclipse.app/Contents/Eclipse/dropins/net.sf.j2s*
                curl -LOk https://github.com/BobHanson/java2script/raw/swingjs/releases/$2/net.sf.j2s_$2.zip
                mv net.sf.j2s_$2.zip net.sf.j2s_$NEWESTJ2S.zip
                cp net.sf.j2s_$NEWESTJ2S.zip Eclipse.app/Contents/Eclipse/dropins/net.sf.j2s_$NEWESTJ2S.zip
                unzip net.sf.j2s_$NEWESTJ2S.zip -d Eclipse.app/Contents/Eclipse/dropins/
                rm net.sf.j2s_$NEWESTJ2S.zip
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            else
                echo "****************************************
                Latest J2S plugins version $CURRENTJ2S already installed, exiting
                ****************************************"
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            fi
        fi

        # Download
        BINARY="eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz"
        APP="Eclipse.app"
        echo $BINARY
        echo $APP
        if [ -d "$APP" ]; then
            rm -rf $APP
        fi

        if [ ! -f "$BINARY" ]; then
            curl -O http://eclipse.mirror.rafal.ca/technology/epp/downloads/release/neon/3/eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz
        fi
        curl -LOk https://github.com/BobHanson/java2script/raw/swingjs/releases/latest/net.sf.j2s_latest.zip
        tar xvf eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz
        rm eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz
        cp net.sf.j2s_latest.zip Eclipse.app/Contents/Eclipse/dropins/net.sf.j2s_latest.zip
        unzip net.sf.j2s_latest.zip -d Eclipse.app/Contents/Eclipse/dropins/
        rm net.sf.j2s_latest.zip
    else #specify a version of the plugins [in argv, this will be argument #2, and can be invoked via $2]
        if [ ! -z "$3" ]
        then
            cd $3
        fi

        if [ -d "Eclipse.app" ]
        then
            echo "****************************************
            Eclipse is already installed. Checking if J2S plugins need to be changed
            ****************************************"
            cd Eclipse.app/Contents/Eclipse/dropins
            CURRENTJ2S=$(ls *.zip)
            CURRENTJ2S=${CURRENTJ2S::-4}
            CURRENTJ2S=${CURRENTJ2S:11}
            cd ../../../../
            if [ $CURRENTJ2S != $2 ]
            then
                rm -rf Eclipse.app/Contents/Eclipse/dropins/net.sf.j2s*
                curl -LOk https://github.com/BobHanson/java2script/raw/swingjs/releases/$2/net.sf.j2s_$2.zip
                cp net.sf.j2s_$2.zip Eclipse.app/Contents/Eclipse/dropins/net.sf.j2s_$2.zip
                unzip net.sf.j2s_$2.zip -d Eclipse.app/Contents/Eclipse/dropins/
                rm net.sf.j2s_$2.zip
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            else
                echo "****************************************
                Specified J2S plugins version $2 already installed, exiting
                ****************************************"
                [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1 # handle exits from shell or function but don't exit interactive shell
            fi
        fi

        # Download
        BINARY="eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz"
        APP="Eclipse.app"
        echo $BINARY
        echo $APP
        if [ -d "$APP" ]; then
            rm -rf $APP
        fi

        if [ ! -f "$BINARY" ]; then
            curl -O http://eclipse.mirror.rafal.ca/technology/epp/downloads/release/neon/3/eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz
        fi
        curl -LOk https://github.com/BobHanson/java2script/raw/swingjs/releases/$2/net.sf.j2s_$2.zip
        tar xvf eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz
        rm eclipse-jee-neon-3-macosx-cocoa-x86_64.tar.gz
        cp net.sf.j2s_$2.zip Eclipse.app/Contents/Eclipse/dropins/net.sf.j2s_$2.zip
        unzip net.sf.j2s_$2.zip -d Eclipse.app/Contents/Eclipse/dropins/
        rm net.sf.j2s_$2.zip
    fi
else
    echo "****************************************
swingjs option not yet implemented. Please check back in a few days time. You will be able to install either the version of J2S plugins compatible with your most recent version of the SwingJS runtime, or a version of the J2S plugins that is compatible with your specified version of the SwingJS runtime.
****************************************"
fi
